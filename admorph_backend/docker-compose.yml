version: '3.8'

services:
  admorph-backend:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ADMORPH_ENVIRONMENT=development
      - ADMORPH_HOST=0.0.0.0
      - ADMORPH_PORT=8000
      - ADMORPH_LOG_LEVEL=INFO
      - ADMORPH_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:3001
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - redis
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=admorph
      - POSTGRES_USER=admorph
      - POSTGRES_PASSWORD=admorph_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admorph"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery-worker:
    build: .
    command: celery -A admorph_backend.services.celery_app worker --loglevel=info
    environment:
      - ADMORPH_ENVIRONMENT=development
      - ADMORPH_REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A admorph_backend.services.celery_app beat --loglevel=info
    environment:
      - ADMORPH_ENVIRONMENT=development
      - ADMORPH_REDIS_URL=redis://redis:6379/0
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

volumes:
  redis_data:
  postgres_data:
